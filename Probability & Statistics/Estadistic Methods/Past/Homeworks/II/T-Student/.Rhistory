install install.packages("stats")
library("stats")
pt(0)
pt(0,2)
pt(0,3)
library(stats)
tmin
while(pt(tmin) > .1)
tmin <- tmin * 2
tmin <- tmin * 2
tmin <- -1
while(pt(tmin) > .1)
tmin <- tmin * 2
while(pt(tmin, 9) > .1)
tmin <- tmin * 2
library(stats)
tmin <- -1
while(pt(tmin, 9) > .1)
{
tmin <- tmin * 2
}
while(pt(tmin, 9) > .1)
{
tmin <- tmin * 2
}
while(pt(tmin, 9) > .1)
{
tmin <- tmin * 2
}
pt(tmin,9)
tmax <- 0
while(tmax - tmin < 1e-10)
{
prom <- (tmax + tmin) / 2
if(pt(prom,9) < .1)
tmin <- prom
else
tmax <- prom
}
b <- tmax
while((tmax - tmin) > 1e-10)
{
prom <- (tmax + tmin) / 2
if(pt(prom,9) < .1)
tmin <- prom
else
tmax <- prom
}
pt(tmaax, 9)
pt(tmax, 9)
while((tmax - tmin) > 1e-15)
{
prom <- (tmax + tmin) / 2
if(pt(prom,9) < .1)
tmin <- prom
else
tmax <- prom
}
pt(tmax, 9)
b <- tmax
pt(1,9)
pt(-1,9)
pt(-2,9)
pt(2,9)
a <- 2
tmin <-0
tmax <- 1
if(pt(a,9) + sum_probability > 1)
print("No existe c")
sum_probability <- 0.9
target_probability <- (1-sum_probability)/2
if(pt(a,9) + sum_probability > 1)
print("No existe c")
a <- -2
if(pt(a,9) + sum_probability > 1)
print("No existe c")
target_probability <- sum_probability+pt(2,9)
while(pt(tmin, 9) > target_probability)
{
tmax <- tmax * 2
}
while((tmax - tmin) > 1e-15)
{
prom <- (tmax + tmin) / 2
if(pt(prom,9) < target_probability)
tmin <- prom
else
tmax <- prom
}
a <- -2
tmin <- 0
tmax <- 1
if(pt(a,9) + sum_probability > 1)
print("No existe c")
target_probability <- sum_probability+pt(a,9)
while(pt(tmin, 9) > target_probability)
{
tmax <- tmax * 2
}
while((tmax - tmin) > 1e-15)
{
prom <- (tmax + tmin) / 2
if(pt(prom,9) < target_probability)
tmin <- prom
else
tmax <- prom
}
tmin <- 0
tmax <- 1
pt(1,9)
tmax <- 1
if(pt(a,9) + sum_probability > 1)
print("No existe c")
a <- -2
tmin <- 0
tmax <- 1
if(pt(a,9) + sum_probability > 1)
print("No existe c")
target_probability <- sum_probability+pt(a,9)
while(pt(tmax, 9) < target_probability)
{
tmax <- tmax * 2
}
while((tmax - tmin) > 1e-15)
{
prom <- (tmax + tmin) / 2
if(pt(prom,9) < target_probability)
tmin <- prom
else
tmax <- prom
}
pt(tmax,9)-pt(a,9)
c <- tmax
source('~/.active-rstudio-document')
print(a)
printf("Los valores de a,b,c respectivamente son\n" a b c)
printf("Los valores de a,b,c respectivamente son\n")
print("Los valores de a,b,c respectivamente son\n")
print("Los valores de a,b,c respectivamente son\n" a b c)
cat("Los valores de a,b,c respectivamente son\n", a, b, c)
cat("Los valores de a,b,c respectivamente son respectivamente\n", a, b, c)
if((c-a) > 2*b)
cat("Se cumple que |c-a|>2b")
else
if((c-a) > 2*b)
{
cat("Se cumple que |c-a|>2b")
} else
cat("No se cumple que |c-a|>2b")
source('~/Academic/School/University/Probability/Estadistic Methods/Homework II/T-Student/T-Student.R')
library(stats)
sum_probability <- 0.9
b
library(stats)
sum_probability <- 0.9
target_probability <- (1-sum_probability)/2
tmin <- -1
while(pt(tmin, 9) > target_probability)
{
tmin <- tmin * 2
}
tmax <- 0
while((tmax - tmin) > 1e-15)
{
prom <- (tmax + tmin) / 2
if(pt(prom,9) < target_probability)
{
tmin <- prom
} else
tmax <- prom
}
b <- tmax
a <- -2
tmin <- 0
tmax <- 1
if(pt(a,9) + sum_probability > 1)
print("No existe c")
target_probability <- sum_probability+pt(a,9)
while(pt(tmax, 9) < target_probability)
{
tmax <- tmax * 2
}
while((tmax - tmin) > 1e-15)
{
prom <- (tmax + tmin) / 2
if(pt(prom,9) < target_probability)
{
tmin <- prom
} else
tmax <- prom
}
c <- tmax
cat("Los valores de a,b,c respectivamente son respectivamente\n", a, b, c)
if((c-a) > 2*b)
{
cat("Se cumple que |c-a|>2b")
} else
cat("No se cumple que |c-a|>2b")
b
print(b)
options(digits=10)
Y
source('~/Academic/School/University/Probability/Estadistic Methods/Homework II/T-Student/T-Student.R')
print(b)
print(x)
print(c)
print(2*b)
